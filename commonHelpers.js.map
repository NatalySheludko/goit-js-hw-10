{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userDate = 0;\n\nconst dateInput = document.querySelector(\"#datetime-picker\");\nconst startClick = document.querySelector(\"[data-start]\");\nconst clockDays = document.querySelector(\"[data-days]\");\nconst clockHours = document.querySelector(\"[data-hours]\");\nconst clockMinutes = document.querySelector(\"[data-minutes]\");\nconst clockSeconds = document.querySelector(\"[data-seconds]\");\n\nstartClick.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n   const userSelectedDate = selectedDates[0];\n    userDate = userSelectedDate.getTime();\n\n    if (userDate < new Date()) {\n      startClick.disabled = true;\n      iziToast.show({\n        position: \"topRight\",\n        close: false,\n        messageColor: \"white\",\n        backgroundColor: \"#ff544b\",\n        message: \"❌ Please choose a date in the future\",\n      });\n    } else {\n      startClick.disabled = false;\n    }\n  },\n};\n\nflatpickr(\"input#datetime-picker\", options);\n\nstartClick.addEventListener(\"click\", () => {\n  startClick.disabled = true;\n  dateInput.disabled = true;\n\n  const intervalId = setInterval(() => {\n    const diff = userDate - Date.now();\n    const time = convertMs(diff);\n\n    addLeadingZero(time);\n\n    if (diff < 1000) {\n      clearInterval(intervalId);\n      dateInput.disabled = false;\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(time) {\n  clockDays.textContent = time.days.toString().padStart(2, \"0\");\n  clockHours.textContent = time.hours.toString().padStart(2, \"0\");\n  clockMinutes.textContent = time.minutes.toString().padStart(2, \"0\");\n  clockSeconds.textContent = time.seconds.toString().padStart(2, \"0\");\n}\n"],"names":["userDate","dateInput","startClick","clockDays","clockHours","clockMinutes","clockSeconds","options","selectedDates","iziToast","flatpickr","intervalId","diff","time","convertMs","addLeadingZero","ms","days","hours","minutes","seconds"],"mappings":"+IAMA,IAAIA,EAAW,EAEf,MAAMC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5DJ,EAAW,SAAW,GAEtB,MAAMK,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CAErBR,EADwBQ,EAAc,CAAC,EACX,UAExBR,EAAW,IAAI,MACjBE,EAAW,SAAW,GACtBO,EAAS,KAAK,CACZ,SAAU,WACV,MAAO,GACP,aAAc,QACd,gBAAiB,UACjB,QAAS,sCACjB,CAAO,GAEDP,EAAW,SAAW,EAEzB,CACH,EAEAQ,EAAU,wBAAyBH,CAAO,EAE1CL,EAAW,iBAAiB,QAAS,IAAM,CACzCA,EAAW,SAAW,GACtBD,EAAU,SAAW,GAErB,MAAMU,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAOZ,EAAW,KAAK,IAAG,EAC1Ba,EAAOC,EAAUF,CAAI,EAE3BG,EAAeF,CAAI,EAEfD,EAAO,MACT,cAAcD,CAAU,EACxBV,EAAU,SAAW,GAExB,EAAE,GAAI,CACT,CAAC,EAED,SAASa,EAAUE,EAAI,CAKrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeF,EAAM,CAC5BV,EAAU,YAAcU,EAAK,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC5DT,EAAW,YAAcS,EAAK,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC9DR,EAAa,YAAcQ,EAAK,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAClEP,EAAa,YAAcO,EAAK,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CACpE"}